which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 1, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = T, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 1,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 1, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 2, is_warm_start = T,
ic_type = 3,is_cv = T, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 1,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 1, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = T, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 1,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 1, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 2, is_warm_start = T,
ic_type = 3,is_cv = T, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 1, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = FALSE, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
library(datamicroarray)
data('chowdary', package = 'datamicroarray')
x = chowdary.x
x = chowdary$x
y = chowdary$y
y
y[y=="breast"]=1
y=="breast"
y
y = chowdary$y
y
y == "breast"
y[y=="breast"] = 1
x.shape
x.size()
x.size
data('alon', package = 'datamicroarray')
alon$x
x = alon$x
x
dim(x)
y = alon$y
dim(y)
len(y)
length(y)
y
y == n
y == "n"
y[y == n] = 1
y = alon$y
y_new = rep(1, 62)
y_new[y == "t"] = 1
y_new
y_new[y == "t"] = 0
y_new
setwd("D:/Kangkang/BeSS/bess-0.0.12-early/test")
write.csv(x, "alon_x_logistic.csv", row.names = F)
write.csv(y_new, "alon_y_logistic.csv", row.names = F)
y = y_new
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 2,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = TRUE, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 3,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = TRUE, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 3,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = TRUE, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 2,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = TRUE, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = TRUE, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = TRUE, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = False, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 2,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 4,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
Rcpp::sourceCpp('D:/Kangkang/BeSS/src/bess.cpp')
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
source('D:/Kangkang/新建文件夹/WeChat Files/wxid_70qqws672a5322/FileStorage/File/2020-11/coxtest.R')
Rcpp::sourceCpp('D:/Kangkang/BeSS/src/bess.cpp')
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 3,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 3,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = TRUE, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = TRUE, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 5, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 2, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 5, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
source('D:/Kangkang/新建文件夹/WeChat Files/wxid_70qqws672a5322/FileStorage/File/2020-11/coxtest.R')
Rcpp::sourceCpp('D:/Kangkang/BeSS/src/bess.cpp')
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 5, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 5, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = T, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 5, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = T, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
# sort_y <- order(y[, 1])
# y <- y[sort_y, ]
# x <- x[sort_y, ]
# y <- y[, 2]
t1=proc.time()
list_pdas <- bessCpp(as.matrix(x), as.matrix(y), data_type = 2, weight = rep(1,nrow(x)), is_normal = T,
algorithm_type = 5, model_type = 1,
max_iter = 20, exchange_num = 0, path_type = 1, is_warm_start = T,
ic_type = 3,is_cv = F, K = 5, state = 1,
sequence = c(1:29), lambda_seq = exp(seq(log(100), log(0.01), length.out = 10)),#exp(seq(log(100), log(0.01), length.out = 30)),
s_min = 1, s_max = 30, K_max = 10, epsilon = 10,
lambda_max =100, lambda_min = 0.01, nlambda=100, is_screening = F, screening_size =30, powell_path = 2,
g_index = (1:ncol(x)-1))
t2=proc.time()
t=(t2-t1)[3][[1]]
which(list_pdas$beta!=0)
list_pdas$beta[which(list_pdas$beta!=0)]
length(x)
