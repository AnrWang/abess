name: PyPI

on:
  workflow_dispatch:
  push:
    branches:
     - develop_pybind11
  release:
    types:
      - published    

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:        
      - uses: actions/checkout@v2

      - name: Build SDist
        run: | 
          pipx run build --sdist

      - name: Check metadata
        run: | 
          pipx run twine check dist/*

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        # os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        with: 
          package-dir: ./python  ## trigger cibuildwheel in sub-directory 
        # env:
          # CIBW_ARCHS_MACOS: x86_64 arm64 universal2
          # CIBW_BEFORE_TEST: pip install pytest lifelines pandas
          # CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"
          # CIBW_TEST_COMMAND: pytest {package}
        #   CIBW_BEFORE_ALL: cd ./python

      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash

      - name: Upload wheels to the project's github page
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  # upload_all:
  #   name: Upload if release
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'release' && github.event.action == 'published'

  #   steps:
  #   - uses: actions/setup-python@v2

  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: artifact
  #       path: dist

  #   - uses: pypa/gh-action-pypi-publish@v1.4.2
  #     with:
  #       user: __token__
  #       password: ${{ secrets.pypi_password }}

