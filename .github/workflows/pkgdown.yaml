on:
  push:
    branches:
      - main
      - master


jobs:
  pkgdown:
    name: pkgdown
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.ABESS_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps("R-package", dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps("R-package", dependencies = TRUE)
          install.packages("pkgdown", type = "binary")
          install.packages("survival", type = "binary")
          install.packages("Hmisc", type = "binary")
          install.packages("ROCR", type = "binary")
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL R-package

      - name: Deploy package
        run: |
          git config --local user.email "zhuj37@mail2.sysu.edu.cn"
          git config --local user.name "Mamba413"
          Rscript -e 'pkgdown::deploy_to_branch("R-package", new_process = FALSE)'
  
  codecovPy:
    name: workflow for Codecov
    runs-on: ubuntu-latest
    env:
      PYTHON: '3.7'
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.7
    - name: Generate coverage report
      run: |
        pip install -r ./python/requirements.txt
        pip install pytest
        pip install pytest-cov
        pip install scikit-learn
        pip install lifelines
        pip install pandas
        pip install codecov
        pip install gcovr
        export CFLAGS="--coverage"
        python ./python/setup.py install
        pytest ./python --cov=abess --cov-report=xml
        gcovr ./python/src/ --xml 
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        directory: ./
        flags: python
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        path_to_write_report: ./codecov_report.txt
        verbose: true
  
