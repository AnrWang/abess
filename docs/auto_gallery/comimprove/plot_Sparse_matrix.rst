
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery\comimprove\plot_Sparse_matrix.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_gallery_comimprove_plot_Sparse_matrix.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery_comimprove_plot_Sparse_matrix.py:


Sparse matrix
==============

.. GENERATED FROM PYTHON SOURCE LINES 6-9

We sometimes meet with problems where the :math:`NÃ—p` input matrix :math:`X` is extremely sparse, i.e., many entries in :math:`X:math:` have zero values. A notable example comes from document classification: aiming to assign classes to a document, making it easier to manage for publishers and news sites. The input variables for characterizing documents are generated from a so called "bag-of-words" model. In this model, each variable is scored for the presence of each of the words in the entire dictionary under consideration. Since most words are absent, the input variables for each document is mostly zero, and so the entire matrix is mostly zero. 

For example, we create a sparse matrix like:

.. GENERATED FROM PYTHON SOURCE LINES 9-20

.. code-block:: default


    from scipy.sparse import coo_matrix
    import numpy as np

    row  = np.array([0, 1, 2, 3, 4, 4,  5, 6, 7, 7, 8, 9])
    col  = np.array([0, 3, 1, 2, 4, 3, 5, 2, 3, 1, 5, 2])
    data = np.array([4, 5, 7, 9, 1, 23, 4, 5, 6, 8, 77, 100])
    x = coo_matrix((data, (row, col)))

    print(x.toarray())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [[  4   0   0   0   0   0]
     [  0   0   0   5   0   0]
     [  0   7   0   0   0   0]
     [  0   0   9   0   0   0]
     [  0   0   0  23   1   0]
     [  0   0   0   0   0   4]
     [  0   0   5   0   0   0]
     [  0   8   0   6   0   0]
     [  0   0   0   0   0  77]
     [  0   0 100   0   0   0]]




.. GENERATED FROM PYTHON SOURCE LINES 21-22

The sparse matrix can be directly used in `abess` pacakages. We just need to set argument `sparse_matrix = T`. Note that if the input matrix is not sparse matrix, the program would automatically transfer it into the sparse one, so this argument can also make some improvement.

.. GENERATED FROM PYTHON SOURCE LINES 22-34

.. code-block:: default



    from abess import LinearRegression

    coef = np.array([1, 1, 1, 0, 0, 0])
    y = x.dot(coef)
    model = LinearRegression(sparse_matrix = True)
    model.fit(x, y)

    print("real coef: \n", coef)
    print("pred coef: \n", model.coef_)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    real coef: 
     [1 1 1 0 0 0]
    pred coef: 
     [1. 1. 1. 0. 0. 0.]




.. GENERATED FROM PYTHON SOURCE LINES 35-36

We compare the runtime when the input matrix is dense matrix:

.. GENERATED FROM PYTHON SOURCE LINES 36-50

.. code-block:: default



    from time import time

    t = time()
    model = LinearRegression()
    model.fit(x.toarray(), y)
    print("dense matrix:  ", time() - t)

    t = time()
    model = LinearRegression(sparse_matrix = True)
    model.fit(x, y)
    print("sparse matrix:  ", time() - t)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    dense matrix:   0.0009975433349609375
    sparse matrix:   0.0




.. GENERATED FROM PYTHON SOURCE LINES 51-57

From the comparison, we see that the time required by sparse matrix is smaller, and this sould be more visible when the sparse imput matrix is large. Hence, we suggest to assign a sparse matrix to `abess` when the input matrix have a lot of zero entries.

R tutorial
-------------

For R tutorial, please view [https://abess-team.github.io/abess/articles/v09-fasterSetting.html](https://abess-team.github.io/abess/articles/v09-fasterSetting.html).


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.051 seconds)


.. _sphx_glr_download_auto_gallery_comimprove_plot_Sparse_matrix.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_Sparse_matrix.py <plot_Sparse_matrix.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_Sparse_matrix.ipynb <plot_Sparse_matrix.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
